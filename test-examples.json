[
    {
        "name": "Palindrome Check",
        "className": "Solution",
        "methodName": "isPalindrome",
        "sourceCode": "public class Solution {\n    public boolean isPalindrome(int x) {\n        String str = Integer.toString(x);\n        String rev = new StringBuilder(str).reverse().toString();\n        if(str.charAt(0) == '-'){\n            return false;\n        }\n        return str.equals(rev);\n    }\n}",
        "testInputs": ["121", "-121", "12321"]
    },
    {
        "name": "Fibonacci Sequence",
        "className": "FibCalculator",
        "methodName": "fibonacci",
        "sourceCode": "public class FibCalculator {\n    public int fibonacci(int n) {\n        if (n <= 1) {\n            return n;\n        }\n        return fibonacci(n - 1) + fibonacci(n - 2);\n    }\n}",
        "testInputs": ["5", "8", "10"]
    },
    {
        "name": "Array Sum",
        "className": "ArrayProcessor",
        "methodName": "sum",
        "sourceCode": "public class ArrayProcessor {\n    public int sum(int[] arr) {\n        int total = 0;\n        for (int i = 0; i < arr.length; i++) {\n            total += arr[i];\n        }\n        return total;\n    }\n}",
        "testInputs": ["new int[]{1,2,3,4,5}", "new int[]{10,20,30}"]
    },
    {
        "name": "String Reverser",
        "className": "StringUtil",
        "methodName": "reverse",
        "sourceCode": "public class StringUtil {\n    public String reverse(String str) {\n        if (str == null || str.isEmpty()) {\n            return str;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = str.length() - 1; i >= 0; i--) {\n            sb.append(str.charAt(i));\n        }\n        return sb.toString();\n    }\n}",
        "testInputs": ["\"hello\"", "\"world\"", "\"BTrace\""]
    }
]
